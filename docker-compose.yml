# APEX Ollama + Notion + MCP + E2B + A2A Integration Hub
version: '3.8'

services:
  # Ollama Service
  ollama:
    image: ollama/ollama:latest
    container_name: apex-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-models:/root/.ollama
    environment:
      - OLLAMA_NUM_PARALLEL=4
      - OLLAMA_MAX_LOADED_MODELS=3
      - OLLAMA_HOST=0.0.0.0:11434
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    networks:
      - apex-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3

  # APEX Orchestrator
  orchestrator:
    build: .
    container_name: apex-orchestrator
    ports:
      - "3000:3000"
      - "3001:3001"
      - "3002:3002"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - NODE_ENV=production
      - PORT=3000
      - MCP_SERVER_PORT=3001
      - A2A_DISCOVERY_PORT=3002
    env_file:
      - .env
    depends_on:
      - ollama
      - redis
      - postgres
    networks:
      - apex-network
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    restart: unless-stopped

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: apex-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - apex-network
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru

  # PostgreSQL for persistent data
  postgres:
    image: postgres:15-alpine
    container_name: apex-postgres
    environment:
      - POSTGRES_DB=apex_orchestrator
      - POSTGRES_USER=apex_user
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-apex_password_2025}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5432:5432"
    networks:
      - apex-network

  # Open WebUI for Ollama
  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: apex-webui
    ports:
      - "8080:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_SECRET_KEY=${WEBUI_SECRET_KEY:-apex-secret-2025}
    volumes:
      - open-webui-data:/app/backend/data
    depends_on:
      - ollama
    networks:
      - apex-network
    restart: unless-stopped

  # Monitoring with Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: apex-grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin2025}
    volumes:
      - grafana-data:/var/lib/grafana
    networks:
      - apex-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: apex-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    networks:
      - apex-network
    restart: unless-stopped

volumes:
  ollama-models:
    driver: local
  redis-data:
    driver: local
  postgres-data:
    driver: local
  open-webui-data:
    driver: local
  grafana-data:
    driver: local
  prometheus-data:
    driver: local

networks:
  apex-network:
    driver: bridge
    name: apex-integration-network